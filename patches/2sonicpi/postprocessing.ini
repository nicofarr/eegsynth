[general]
delay=0.05
debug=2

[redis]
hostname=localhost
port=6379

[input]
; the keys here can have an arbitrary name, but should map those in the output section
; the keys must be lower-case. values should not contain an equation, only one-to-one mappings
frontalalpha.fpz=spectral.fpz.alpha
mm.fpz=spectral.fpz.alpha.mean
stdd.fpz=spectral.fpz.alpha.std
max.fpz=spectral.fpz.alpha.max
min.fpz=spectral.fpz.alpha.min

frontalalpha.fp1=spectral.fp1.alpha
mm.fp1=spectral.fp1.alpha.mean
stdd.fp1=spectral.fp1.alpha.std
max.fp1=spectral.fp1.alpha.max
min.fp1=spectral.fp1.alpha.min

frontalalpha.fp2=spectral.fp2.alpha
mm.fp2=spectral.fp2.alpha.mean
stdd.fp2=spectral.fp2.alpha.std
max.fp2=spectral.fp2.alpha.max
min.fp2=spectral.fp2.alpha.min


[output]
; besides +, -, /, *, the equations also support log, log2, log10, exp, power from numpy
; and compress, limit, rescale, normalizerange, normalizestandard from EEGsynth

;post.alpha.fp1=64 * normalizestandard(mm.fp1,mm.fp1,stdd.fp1)
;post.alpha.fp2=64 * normalizestandard(mm.fp2,mm.fp2,stdd.fp2)
;post.alpha.fpz=64 * normalizestandard(mm.fpz,mm.fpz,stdd.fpz)



;post.alpha.fp1=64 * normalizestandard(frontalalpha.fp1,mm.fp1,stdd.fp1) + 64 
;post.alpha.fp2=64 * normalizestandard(frontalalpha.fp2,mm.fp2,stdd.fp2) + 64
;post.alpha.fpz=64 * normalizestandard(frontalalpha.fpz,mm.fpz,stdd.fpz) + 64


post.alpha.fp1=64 * normalizerange(mm.fp1,max.fp1,min.fp1) + 64 
post.alpha.fp2=64 * normalizerange(mm.fp2,max.fp2,min.fp2) + 64
post.alpha.fpz=64 * normalizerange(mm.fpz,max.fpz,min.fpz) + 64



;post.launchcontrol.avg=(x1+x2)/2
;post.launchcontrol.relative=x1/x2
;post.launchcontrol.log10=log10(x1)
;post.launchcontrol.compress=compress(x1,x2,x3)

;launchcontrol.control077.quantized=float(int(x1/10))*10
;launchcontrol.control078.quantized=float(int(x2/10))*10
;launchcontrol.control079.quantized=float(int(x3/10))*10
